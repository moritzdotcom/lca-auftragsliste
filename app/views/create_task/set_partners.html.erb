<header>
  <h1>Neuer Auftrag</h1>
  <%= render 'shared/progress_bar', steps: Task.create_steps, step: 3 %>
</header>

<%= simple_form_for @task, url: wizard_path, method: :put, defaults: { wrapper_html: {class: 'input-field'} } do |f| %>

  <%= f.input :partner_array, as: :hidden, wrapper_html: {class: ''} %>

  <div class="input-field input">
    <label for="task_partner_names">Weitergeleitet an</label>

    <input type="text" id="partner-search">
  </div>

  <div id="add-partner" class="max-width-container">
    <div class="flex-container center-start">
      <p id="new-partner-name"></p>
      <div class="button" onclick="createPartner()">Partner Anlegen</div>
    </div>
  </div>

  <div id="added-partners" class="max-width-container">
    <% @task.partners.each do |partner| %>
      <div class="partner-info flex-container center-start" data-name="<%= partner.name.try(:downcase) %>" data-company="<%= partner.company_name.try(:downcase) %>" data-id="<%= partner.id %>" onclick="removePartner(this, '<%= partner.name %>', '<%= partner.company_name %>')">
        <% if partner.user %>

          <% if partner.user.profile_picture.attached? %>
            <%= image_tag partner.user.profile_picture.variant(resize_to_fill: [50, 50, gravity: 'center']), class: 'profile-picture' %>
          <% else %>
            <%= image_tag 'default_profile_pic.png', size: "50x50", class: 'profile-picture' %>
          <% end %>

          <div>
            <p class="partner-name"><%= partner.name %></p>
            <p class="partner-company"><%= partner.company_name %></p>
          </div>
        <% else %>
          <div style="width: 50px; height: 50px;"></div>
          <div>
            <p class="partner-name"><%= partner.name %></p>
            <p class="partner-company"><%= partner.company_name %></p>
          </div>
        <% end %>
      </div>
    <% end %>
  </div>

  <div id="partner-list" class="max-width-container">
    <% @partners.each do |partner| %>
      <div class="partner-info flex-container center-start" data-name="<%= partner.name.try(:downcase) %>" data-company="<%= partner.company_name.try(:downcase) %>" data-id="<%= partner.id %>" onclick="addPartner(this, '<%= partner.name %>', '<%= partner.company_name %>')">
        <% if partner.user %>

          <% if partner.user.profile_picture.attached? %>
            <%= image_tag partner.user.profile_picture.variant(resize_to_fill: [50, 50, gravity: 'center']), class: 'profile-picture' %>
          <% else %>
            <%= image_tag 'default_profile_pic.png', size: "50x50", class: 'profile-picture' %>
          <% end %>

          <div>
            <p class="partner-name"><%= partner.name %></p>
            <p class="partner-company"><%= partner.company_name %></p>
          </div>
        <% else %>
          <div style="width: 50px; height: 50px;"></div>
          <div>
            <p class="partner-name"><%= partner.name %></p>
            <p class="partner-company"><%= partner.company_name %></p>
          </div>
        <% end %>
      </div>
    <% end %>
  </div>

  <%= f.button :submit, 'Weiter', id: 'submit-button' %>
<% end %>

<script>
  function setLabels() {
    document.querySelectorAll('.input').forEach(input => {
      if ((input.querySelector('input') && input.querySelector('input').value) || (input.querySelector('select') && input.querySelector('select').options.selectedIndex != 0) || (input.querySelector('textarea') && input.querySelector('textarea').value)) {
        input.classList.add('has-value')
      }
      else {
        input.classList.remove('has-value')
      }
      input.addEventListener('change', () => {
        if ((input.querySelector('input') && input.querySelector('input').value) || (input.querySelector('select') && input.querySelector('select').options.selectedIndex != 0) || (input.querySelector('textarea') && input.querySelector('textarea').value)) {
          input.classList.add('has-value')
        }
        else {
          input.classList.remove('has-value')
        }
      })
    })
  }

  hiddenPartnerInput = document.getElementById('task_partner_array');

  function addPartner(elem, name, company) {
    partnerHtml = `<div class="partner-info flex-container center-start" data-id="${elem.dataset.id}" data-name="${name.toLowerCase()}" data-company="${company.toLowerCase()}" onclick="removePartner(this, '${name}', '${company}')">
                      ${elem.innerHTML}
                    </div>`

    document.getElementById('added-partners').insertAdjacentHTML('beforeend', partnerHtml)

    hiddenPartnerInput.value = hiddenPartnerInput.value.length > 0 ? hiddenPartnerInput.value.split(';&').concat(elem.dataset.id).join(';&') : elem.dataset.id

    elem.remove();
    resetSearch();
  }

  function addNewPartner(partner) {
    partnerHtml = `<div class="partner-info flex-container center-start" data-id="${partner.id}" data-name="${partner.name?.toLowerCase()}" data-company="${partner.company_name?.toLowerCase()}" onclick="removePartner(this, '${partner.name}', '${partner.company_name}')">
                      <div style="width: 50px; height: 50px;"></div>
                      <div>
                        <p class="partner-name">${partner.name}</p>
                        <p class="partner-company">${partner.company_name || ''}</p>
                      </div>
                    </div>`

    document.getElementById('added-partners').insertAdjacentHTML('beforeend', partnerHtml)

    hiddenPartnerInput.value = hiddenPartnerInput.value.length > 0 ? hiddenPartnerInput.value.split(';&').concat(partner.id).join(';&') : partner.id

    resetSearch();
  }

  function removePartner(elem, name, company) {
    partnerElement = document.getElementById('partner-list').querySelector(`.partner-info[data-id="${elem.dataset.id}"]`)

    if (partnerElement) {
      partnerElement.style.display = 'flex';
    } else {
      partnerHtml = `<div class="partner-info flex-container center-start" data-id="${elem.dataset.id}" data-name="${name.toLowerCase()}" data-company="${company.toLowerCase()}" onclick="addPartner(this, '${name}', '${company}')">
                        ${elem.innerHTML}
                      </div>`

      document.getElementById('partner-list').insertAdjacentHTML('beforeend', partnerHtml)
    }

    partnerIds = hiddenPartnerInput.value.split(';&')
    partnerIndex = partnerIds.indexOf(elem.dataset.id)

    if (partnerIndex > -1) {
      partnerIds.splice(partnerIndex, 1)
    }

    hiddenPartnerInput.value = partnerIds.join(';&')

    elem.remove();
  }

  function initPartnerCreate(str) {
    if (str && str.length > 0) {
      document.getElementById('add-partner').style.display = 'block';
      document.getElementById('new-partner-name').innerText = str;
    } else {
      document.getElementById('add-partner').style.display = 'none';
      document.getElementById('new-partner-name').innerText = str;
    }
  }

  function createPartner() {
    newPartnerName = document.getElementById('new-partner-name').innerText;

    if (newPartnerName && newPartnerName.length > 0) {
      Rails.ajax({
        url: '/partners.json',
        type: 'POST',
        data: `partner[name]=${newPartnerName}`,
        success: (res) => {
          console.log(res);
          addNewPartner(res.partner);
        },
        error: (err) => {
          console.log(err);
        }
      })
    }
  }

  function searchPartner(str) {
    searchStr = str.toLowerCase();

    document.getElementById('partner-list').querySelectorAll('.partner-info').forEach(partner => {
      if (partner.dataset.name.includes(searchStr) || partner.dataset.company.includes(searchStr)) {
        partner.style.display = 'flex';
      } else {
        partner.style.display = 'none';
      }
    })

    initPartnerCreate(str);
  }

  function resetSearch() {
    searchPartner('');
    document.getElementById('partner-search').value = '';
    setLabels();
  }

  document.getElementById('partner-search').addEventListener('keyup', (e) => {
    searchPartner(e.target.value);
  })
  setLabels()
</script>
